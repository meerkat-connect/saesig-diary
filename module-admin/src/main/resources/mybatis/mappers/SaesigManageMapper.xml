<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saesig.saesigManage.SaesigManageMapper">

    <select id="selectAdoptList" resultType="com.saesig.saesigManage.AdoptListDto" parameterType="com.saesig.saesigManage.AdoptListDto">
        <include refid="PaginationMapper.header"/>
        SELECT a.*, ad1.category as animalDivision1Category, ad2.category as animalDivision2Category, IFNULL(reportCnt,0) as reportCnt ,  IFNULL(likeCnt,0) as likeCnt, IFNULL(chattingCnt,0) as chattingCnt
        from adopt a
            LEFT JOIN (select adopt_id, IFNULL(count(*),0) as reportCnt from adopt_report group by adopt_id) ar ON a.id = ar.adopt_id
            LEFT JOIN (select adopt_id, IFNULL(count(*),0) as likeCnt from adopt_interest group by adopt_id) ai ON a.id = ai.adopt_id
            LEFT JOIN (select adopt_id, IFNULL(count(*),0) as chattingCnt from (select ADOPT_ID, CHAT_ID from chatting_room group by chat_id) cr group by adopt_id) ch ON a.id = ch.adopt_id
            LEFT JOIN animal_division1 ad1 ON a.animal_division1_id = ad1.id
            LEFT JOIN animal_division2 ad2 ON a.animal_division2_id = ad2.id
            LEFT JOIN member m ON a.created_by = m.id
          WHERE 1=1
        <if test="searchType != '' and searchKeyword != '' and searchType != null and searchKeyword != null">
            and #{searchType} LIKE CONCAT('%',#{searchKeyword},'%')
        </if>
        <if test="searchTitle != '' and searchTitle != null">
            and a.title LIKE CONCAT('%',#{searchTitle},'%')
        </if>
        <if test="searchStatus != '' and searchStatus != null and searchStatus != 'all'">
            and a.status = #{searchStatus}
        </if>
        <if test="searchAnimalDivision1Category != '' and searchAnimalDivision1Category != null and searchAnimalDivision1Category != 'all'">
            and ad1.id = #{searchAnimalDivision1Category}
        </if>
        <if test="searchAnimalDivision2Category != '' and searchAnimalDivision2Category != null and searchAnimalDivision2Category != 'all'">
            and ad2.id = #{searchAnimalDivision2Category}
        </if>
        <if test="searchGender != '' and searchGender != null and searchGender != 'all'">
            and a.gender = #{searchGender}
        </if>
        <if test="searchReportCnt != '' and searchReportCnt != null and searchReportCnt != 'all'">
            <if test="searchReportCnt == 1">
                and ar.reportCnt != 0
            </if>
            <if test="searchReportCnt == 0">
                and ar.reportCnt = 0
            </if>
        </if>
        <if test="searchIsDeleted != '' and searchIsDeleted != null and searchIsDeleted != 'all'">
            and a.is_deleted = #{searchIsDeleted}
        </if>
        ORDER BY a.id DESC
        <include refid="PaginationMapper.footer"/>
    </select>

    <select id="selectAdoptById" resultType="com.saesig.saesigManage.AdoptListDto" parameterType="hashMap">
        SELECT a.*, ad1.category as animalDivision1Category, ad2.category as animalDivision2Category,IFNULL(reportCnt,0) as reportCnt , IFNULL(likeCnt,0) as likeCnt, m.nickname as createdName, m.email as createdMail, m1.nickname as adoptMemberNickName, m1.email as adoptMemberEmail, ah.created_at as statusChangeCreatedAt, a.status as beforeStatus
            from adopt a
            LEFT JOIN (select adopt_id,count(*) as reportCnt from adopt_report group by adopt_id) ar ON a.id = ar.adopt_id
            LEFT JOIN (select adopt_id,count(*) as likeCnt from adopt_interest group by adopt_id) ai ON a.id = ai.adopt_id
            LEFT JOIN (select adopt_id,created_at,after_status from adopt_history where adopt_id = #{id} order by id DESC LIMIT 0,1) ah ON a.id = ah.adopt_id
            LEFT JOIN animal_division1 ad1 ON a.animal_division1_id = ad1.id
            LEFT JOIN animal_division2 ad2 ON a.animal_division2_id = ad2.id
            LEFT JOIN member m ON a.created_by = m.id
            LEFT JOIN member m1 ON a.adopt_member_id = m1.id
            WHERE a.id = #{id}
        ORDER BY a.id DESC
    </select>

    <select id="selectAnimalDivision1List" resultType="com.saesig.saesigManage.animalDivisionCategoryDto" parameterType="hashMap">
        SELECT id as animalDivision1Id, category as animalDivision1Category  FROM animal_division1
    </select>

    <select id="selectAnimalDivision2List" resultType="com.saesig.saesigManage.animalDivisionCategoryDto" parameterType="hashMap">
        SELECT animal_division1_id as animalDivision1Id, id as animalDivision2Id, category as animalDivision2Category  FROM animal_division2 where animal_division1_id = #{id}
    </select>

    <select id="selectChattingListByAdoptId" resultType="com.saesig.saesigManage.ChattingDto" parameterType="com.saesig.saesigManage.ChattingDto">
        <include refid="PaginationMapper.header"/>
        SELECT cr.*, m.nickname, m.email, a.status as adoptStatus, a.modified_at
        FROM chatting_room cr
            LEFT JOIN adopt a ON a.id = cr.adopt_id
            LEFT JOIN member m ON m.id = cr.member_id
        WHERE cr.adopt_id = #{adoptId}
        and cr.member_id != a.created_by
        <include refid="PaginationMapper.footer"/>
    </select>

    <select id="selectReportingListByAdoptId" resultType="com.saesig.saesigManage.ReportingDto" parameterType="com.saesig.saesigManage.ReportingDto">
        <include refid="PaginationMapper.header"/>
        SELECT ar.*, m.nickname as memberNickname, m.email as memberEmail, a.status
        FROM adopt_report ar
                 LEFT JOIN adopt a ON a.id = ar.adopt_id
                 LEFT JOIN member m ON m.id = ar.member_id
        WHERE ar.adopt_id = #{adoptId}
        <include refid="PaginationMapper.footer"/>
    </select>

    <select id="selectAdoptCntByAdoptId" resultType="com.saesig.saesigManage.AdoptListDto" parameterType="com.saesig.saesigManage.AdoptListDto">
        SELECT a.id ,IFNULL(reportCnt,0) as reportCnt ,  IFNULL(chattingCnt,0) as chattingCnt
            from adopt a
            LEFT JOIN (select adopt_id, IFNULL(count(*),0) as reportCnt from adopt_report group by adopt_id) ar ON a.id = ar.adopt_id
            LEFT JOIN (select adopt_id, IFNULL(count(*),0) as chattingCnt from (select ADOPT_ID, CHAT_ID from chatting_room group by chat_id) cr group by adopt_id) ch ON a.id = ch.adopt_id
        WHERE a.id=#{id}
    </select>

    <insert id="insertOpenChatReason">
    INSERT INTO chat_open_reason(member_id, category, etc_reason, modified_at, modified_by, created_at, created_by) VALUES (#{memberId}, #{category}, #{etcReason},now(), #{memberId}, now(),#{memberId})
    </insert>

    <select id="selectVaccineByAdoptId" resultType="Integer" parameterType="hashMap">
        SELECT vaccine_id FROM adopt_vaccine where adopt_id = #{id}
    </select>

    <select id="selectVaccineList" resultType="com.saesig.saesigManage.VaccineDto">
        SELECT * FROM vaccine
    </select>

    <update id="updateAdoptInfo" parameterType="com.saesig.saesigManage.AdoptListDto">
        UPDATE adopt SET title = #{title} , content = #{content},is_castrated = #{isCastrated}, etc_content = #{etcContent}, status = #{status}, modified_at = now(), modified_by = #{member.id}
    </update>

    <insert id="updateAdoptVaccine" parameterType="com.saesig.saesigManage.AdoptListDto">
        DELETE FROM adopt_vaccine where adopt_id = #{id};
        INSERT INTO adopt_vaccine(adopt_id,vaccine_id,modified_at,modified_by,created_at,created_by)
        VALUES
        <foreach collection="vaccineList" item="vaccine" separator=",">
            (#{id}, #{vaccine}, now(), #{member.id}, now(), #{member.id})
        </foreach>
    </insert>

    <insert id="insertAdoptStatusChangeLog" parameterType="com.saesig.saesigManage.AdoptListDto">
        insert into adopt_history(adopt_id,before_status,after_status,member_id,modified_at,modified_by,created_at,created_by)
        VALUES (#{id},#{beforeStatus}, #{status},#{member.id},now(), #{member.id}, now(), #{member.id})
    </insert>



</mapper>