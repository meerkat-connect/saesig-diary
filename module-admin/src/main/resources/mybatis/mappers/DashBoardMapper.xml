<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saesig.index.DashBoardMapper">
    <sql id="whereCondition">
        <if test="periodType != null and periodType =='monthly'">
            YEAR(${created_at}) = YEAR(NOW()) AND MONTH(${created_at}) = MONTH(now())
        </if>
        <if test="periodType != null and periodType =='daily'">
            DATE(${created_at}) = DATE(NOW())
        </if>
        <if test="periodType != null and periodType =='weekly'">
            YEARWEEK(${created_at}, 1) = YEARWEEK(NOW(), 1)
        </if>
    </sql>

    <sql id="wherePrevCondition">
        <if test="periodType != null and periodType =='monthly'">
            YEAR(${created_at}) = YEAR(NOW() - INTERVAL 1 MONTH) AND MONTH(${created_at}) = MONTH(NOW()- INTERVAL 1 MONTH)
        </if>
        <if test="periodType != null and periodType =='daily'">
            DATE(${created_at}) = DATE(NOW() - INTERVAL 1 DAY)
        </if>
        <if test="periodType != null and periodType =='weekly'">
            YEARWEEK(${created_at}, 1) = YEARWEEK(NOW() - INTERVAL 1 WEEK, 1)
        </if>
    </sql>

    <!-- 새로운식구 조회-->
    <select id="selectAdoptions" resultType="map">
        SELECT
            adopt.id
            , adopt.title
            , adopt.image_file_group_id
            , adopt.sido
            , adopt.sigungu
            , adopt.gender
            , adopt.animal_division1_id
            , adopt.animal_division2_id
            , animal_division1.category
            , animal_division2.category
        FROM adopt
        LEFT OUTER JOIN animal_division1
            ON adopt.animal_division1_id = animal_division1.id
        LEFT OUTER JOIN animal_division2
            ON adopt.animal_division2_id = animal_division2.id
        ORDER BY created_by DESC
        LIMIT 3
    </select>

    <!-- 일상기록 조회 -->
    <select id="selectDiarys" resultType="map">
        SELECT
            image_file_group_id
        FROM diary
        ORDER BY created_by DESC
        LIMIT 6
    </select>

    <!-- 관리자 게시판 조회 -->
    <select id="selectAdminPosts" resultType="com.saesig.managerBoard.ManagerBoardDto">
        SELECT
            post.id
            , post.category
            , post.title
            , post.created_at
        FROM
            post
        INNER JOIN board
            ON post.board_id = board.id
        WHERE board.category = 'ADMIN'
        ORDER BY created_at DESC
        LIMIT 4
    </select>

    <!--회원 가입 -->
    <select id="countRegisteredMembers" resultType="map">
        WITH total AS (
            SELECT IFNULL(COUNT(1), 0) total_count
            FROM member
        )
        <if test="periodType == 'daily'">
            SELECT
                IFNULL(SUM(CASE WHEN DATE(created_at) >= CURDATE() THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN DATE(created_at) <![CDATA[<]]>  CURDATE() THEN 1 ELSE 0 END), 0) prev
                , (SELECT total_count FROM total) total_count
            FROM member
            WHERE
                DATE(created_at) = CURDATE()
                AND DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        </if>
        <if test="periodType == 'weekly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE(), 3) THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3) THEN 1 ELSE 0 END), 0) prev
                , (SELECT total_count FROM total) total_count
            FROM member
            WHERE
                YEARWEEK(created_at, 3) >= YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3)
        </if>
        <if test="periodType == 'monthly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()) THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH) THEN 1 ELSE 0 END), 0) prev
                , (SELECT total_count FROM total) total_count
            FROM member
            WHERE
                (YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()))
                OR (YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH))
        </if>

        <if test="periodType == 'totally'">
            SELECT
                total.total_count
            FROM total
        </if>
    </select>

    <!-- 신고현황 -->
    <select id="countReports" resultType="map">
        <if test="periodType == 'daily'">
            SELECT
                IFNULL(SUM(current), 0) as current
                , IFNULL(SUM(prev), 0) as prev
            FROM (
                SELECT
                    SUM(CASE WHEN DATE(created_at) >= CURDATE() THEN 1 ELSE 0 END) current
                    , SUM(CASE WHEN DATE(created_at) <![CDATA[<]]>  CURDATE() THEN 1 ELSE 0 END) prev
                FROM adopt_report
                WHERE
                    DATE(created_at) = CURDATE()
                    AND DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)

                UNION ALL

                SELECT
                    SUM(CASE WHEN DATE(created_at) >= CURDATE() THEN 1 ELSE 0 END) current
                    , SUM(CASE WHEN DATE(created_at) <![CDATA[<]]>  CURDATE() THEN 1 ELSE 0 END) prev
                FROM diary_report
                WHERE
                    DATE(created_at) = CURDATE()
                    AND DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
            ) AS subquery
        </if>

        <if test="periodType == 'weekly'">
            SELECT
                IFNULL(SUM(current), 0) AS current
                , IFNULL(SUM(prev), 0) AS prev
            FROM (
                SELECT
                    SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE(), 3) THEN 1 ELSE 0 END) current
                    , SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3) THEN 1 ELSE 0 END) prev
                FROM adopt_report
                WHERE
                    YEARWEEK(created_at, 3) >= YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3)

                UNION ALL

                SELECT
                    SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE(), 3) THEN 1 ELSE 0 END) current
                    , SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3) THEN 1 ELSE 0 END) prev
                FROM diary_report
                WHERE
                    YEARWEEK(created_at, 3) >= YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3)
            ) AS subquery
        </if>
        <if test="periodType == 'monthly'">
            SELECT
                IFNULL(SUM(current), 0) AS current
                , IFNULL(SUM(prev), 0) AS prev
            FROM (
                SELECT
                    SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()) THEN 1 ELSE 0 END) current
                    , SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH) THEN 1 ELSE 0 END) prev
                FROM adopt_report
                WHERE
                    (YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()))
                    OR (YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH))

                UNION ALL

                SELECT
                    SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()) THEN 1 ELSE 0 END) current
                    , SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH) THEN 1 ELSE 0 END) prev
                FROM diary_report
                WHERE
                    (YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()))
                    OR (YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH))
            ) AS subquery
        </if>

        <if test="periodType == 'totally'">
            SELECT
                IFNULL(COUNT(total), 0) AS total
            FROM (
                SELECT
                    COUNT(1) total
                FROM adopt_report

                UNION ALL

                SELECT
                    COUNT(1) total
                FROM diary_report
            ) AS subquery
        </if>
    </select>

    <!-- 문의 현황 -->
    <select id="countInquiries" resultType="map">
        <if test="periodType == 'daily'">
            SELECT
                IFNULL(SUM(CASE WHEN DATE(created_at) >= CURDATE() THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN DATE(created_at) <![CDATA[<]]>  CURDATE() THEN 1 ELSE 0 END), 0) prev
            FROM inquiry
            WHERE
                DATE(created_at) = CURDATE()
                AND DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        </if>
        <if test="periodType == 'weekly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE(), 3) THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3) THEN 1 ELSE 0 END), 0) prev
            FROM inquiry
            WHERE
                YEARWEEK(created_at, 3) >= YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3)
        </if>
        <if test="periodType == 'monthly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()) THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH) THEN 1 ELSE 0 END), 0) prev
            FROM inquiry
            WHERE
                (YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()))
                OR (YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH))
        </if>

        <if test="periodType == 'totally'">
            SELECT
                INFULL(COUNT(1), 0) total
            FROM inquiry
        </if>
    </select>

    <!-- 분양완료 현황 -->
    <select id="countAdoptions" resultType="map">
        <if test="periodType == 'daily'">
            SELECT
                IFNULL(SUM(CASE WHEN DATE(created_at) >= CURDATE() THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN DATE(created_at) <![CDATA[<]]>  CURDATE() THEN 1 ELSE 0 END), 0) prev
            FROM adopt
            WHERE
                status = 'COMPLETE'
                AND DATE(created_at) = CURDATE()
                AND DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        </if>
        <if test="periodType == 'weekly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE(), 3) THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3) THEN 1 ELSE 0 END), 0) prev
            FROM adopt
            WHERE
                status = 'COMPLETE'
                AND YEARWEEK(created_at, 3) >= YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3)
        </if>
        <if test="periodType == 'monthly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()) THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH) THEN 1 ELSE 0 END), 0) prev
            FROM adopt
            WHERE
                status = 'COMPLETE'
                AND (
                    (YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()))
                    OR (YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH))
                )
        </if>

        <if test="periodType == 'totally'">
            SELECT
                IFNULL(COUNT(1), 0) total
            FROM adopt
            WHERE
                status = 'COMPLETE'
        </if>
    </select>

    <!-- 일기 현황 -->
    <select id="countDiarys" resultType="map">
        <if test="periodType == 'daily'">
            SELECT
                IFNULL(SUM(CASE WHEN DATE(created_at) >= CURDATE() THEN 1 ELSE 0 END), 0) current
                , IFNULL(SUM(CASE WHEN DATE(created_at) <![CDATA[<]]>  CURDATE() THEN 1 ELSE 0 END), 0) prev
            FROM diary
            WHERE
                DATE(created_at) = CURDATE()
                AND DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        </if>
        <if test="periodType == 'weekly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE(), 3) THEN 1 ELSE 0 END), 0) this_week
                , IFNULL(SUM(CASE WHEN YEARWEEK(created_at, 3) = YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3) THEN 1 ELSE 0 END), 0) last_week
            FROM diary
            WHERE
                YEARWEEK(created_at, 3) >= YEARWEEK(CURDATE() - INTERVAL 7 DAY, 3)
        </if>
        <if test="periodType == 'monthly'">
            SELECT
                IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()) THEN 1 ELSE 0 END), 0) this_month
                , IFNULL(SUM(CASE WHEN YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH) THEN 1 ELSE 0 END), 0) last_month
            FROM diary
            WHERE
                (YEAR(created_at) = YEAR(CURDATE()) AND MONTH(created_at) = MONTH(CURDATE()))
                OR (YEAR(created_at) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND MONTH(created_at) = MONTH(CURDATE() - INTERVAL 1 MONTH))
        </if>

        <if test="periodType == 'totally'">
            SELECT
                IFNULL(COUNT(1), 0) total
            FROM diary
        </if>
    </select>

    <select id="countAdoptionStatus" resultType="map">
        SELECT
            months.month
            , COALESCE(COUNT(adopt.id), 0) AS count
        FROM (
            SELECT 1 AS month UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL
            SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL
            SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL
            SELECT 10 UNION ALL SELECT 11 UNION ALL SELECT 12
        ) months
        LEFT OUTER JOIN adopt
            ON MONTH(adopt.created_at) = months.month
                AND YEAR(adopt.created_at) = #{searchAdoptionYear}
                AND adopt.status = #{searchAdoptionStatus}
        GROUP BY months.month
    </select>

    <select id="selectAdoption" resultType="map">

    </select>

    <select id="countSmsDelivery" resultType="int">
        SELECT
            IFNULL(COUNT(1), 0) as send_count
        FROM send_history
        LEFT JOIN send_template
            ON send_history.send_template_id = send_template.id
        WHERE
        <include refid="whereCondition">
            <property name="created_at" value="send_history.created_at"/>
        </include>
            AND send_template.method = 'SMS'
    </select>

    <select id="countEmailDelivery" resultType="int">
        SELECT
            IFNULL(COUNT(1), 0) as send_count
        FROM send_history
        LEFT JOIN send_template
            ON send_history.send_template_id = send_template.id
        WHERE
        <include refid="whereCondition">
            <property name="created_at" value="send_history.created_at"/>
        </include>
            AND send_template.method = 'EMAIL'
    </select>

</mapper>