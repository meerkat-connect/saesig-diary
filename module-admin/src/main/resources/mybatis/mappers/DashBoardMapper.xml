<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saesig.common.DashBoardMapper">
    <sql id="whereCondition">
        <if test="periodType != null and periodType =='monthly'">
            YEAR(${created_at}) = YEAR(NOW()) AND MONTH(${created_at}) = MONTH(now())
        </if>
        <if test="periodType != null and periodType =='daily'">
            DATE(${created_at}) = DATE(NOW())
        </if>
        <if test="periodType != null and periodType =='weekly'">
            YEARWEEK(${created_at}, 1) = YEARWEEK(NOW(), 1)
        </if>
    </sql>

    <sql id="wherePrevCondition">
        <if test="periodType != null and periodType =='monthly'">
            YEAR(${created_at}) = YEAR(NOW() - INTERVAL 1 MONTH) AND MONTH(${created_at}) = MONTH(NOW()- INTERVAL 1 MONTH)
        </if>
        <if test="periodType != null and periodType =='daily'">
            DATE(${created_at}) = DATE(NOW() - INTERVAL 1 DAY)
        </if>
        <if test="periodType != null and periodType =='weekly'">
            YEARWEEK(${created_at}, 1) = YEARWEEK(NOW() - INTERVAL 1 WEEK, 1)
        </if>
    </sql>

    <!-- 새로운식구 조회-->
    <select id="selectAdoptions" resultType="map">
        SELECT
            adopt.id
            , adopt.title
            , adopt.image_file_group_id
            , adopt.sido
            , adopt.sigungu
            , adopt.gender
            , adopt.animal_division1_id
            , adopt.animal_division2_id
            , animal_division1.category
            , animal_division2.category
        FROM adopt
        LEFT OUTER JOIN animal_division1
            ON adopt.animal_division1_id = animal_division1.id
        LEFT OUTER JOIN animal_division2
            ON adopt.animal_division2_id = animal_division2.id
        ORDER BY created_by DESC
        LIMIT 3
    </select>

    <!-- 일상기록 조회 -->
    <select id="selectDiarys" resultType="map">
        SELECT
            image_file_group_id
        FROM diary
        ORDER BY created_by DESC
        LIMIT 6
    </select>

    <!-- 관리자 게시판 조회 -->
    <select id="selectAdminPosts" resultType="map">
        SELECT
            post.id
            , post.category
            , post.title
            , post.created_at
        FROM
            post
        INNER JOIN board
            ON post.board_id = board.id
        WHERE board.category = 'ADMIN'
        ORDER BY created_at DESC
        LIMIT 4
    </select>

    <!--회원 가입 -->
    <select id="countRegisteredMembers" resultType="map">
        SELECT
            count(1)
        FROM member
        WHERE
            <include refid="whereCondition">
                <property name="created_at" value="member.created_at"/>
            </include>
    </select>

    <!-- 발송현황 -->
    <select id="countMessageDeliverys" resultType="map">
        SELECT
            send_template.method
            , COUNT(1) as send_count
        FROM send_history
        INNER JOIN send_template
            ON send_history.send_template_id = send_template.id
        WHERE
        <include refid="whereCondition">
            <property name="created_at" value="send_history.created_at"/>
        </include>
        GROUP BY send_template.method

    </select>

    <!-- 신고현황 -->
    <select id="countReports" resultType="integer">
        SELECT IFNULL(SUM(sub_tab.id), 0) AS report_count
        FROM (
            SELECT
                adopt_report.id
                , adopt_report.created_at as created_at
            FROM adopt_report

            UNION ALL

            SELECT
                diary_report.id
                , diary_report.created_at as created_at
            FROM diary_report
        ) sub_tab
        WHERE
            <include refid="whereCondition">
                <property name="created_at" value="sub_tab.created_at"/>
            </include>

        UNION ALL

        SELECT IFNULL(SUM(sub_prev_tab.id), 0) AS report_count
        FROM (
            SELECT
                adopt_report.id
                , adopt_report.created_at as created_at
            FROM adopt_report

            UNION ALL

            SELECT
                diary_report.id
                , diary_report.created_at as created_at
            FROM diary_report
        ) sub_prev_tab
        WHERE
            <include refid="wherePrevCondition">
                <property name="created_at" value="sub_prev_tab.created_at"/>
            </include>
    </select>

    <!-- 문의 현황 -->
    <select id="countInquiries" resultType="integer">
        SELECT count(1)
        FROM inquiry
        WHERE
            <include refid="whereCondition">
                <property name="created_at" value="inquiry.created_at"/>
            </include>
        UNION ALL

        SELECT COUNT(1)
        FROM inquiry
        WHERE
            <include refid="wherePrevCondition">
                <property name="created_at" value="inquiry.created_at"/>
            </include>
    </select>

    <!-- 분양완료 현황 -->
    <select id="countAdoptions" resultType="integer">
        SELECT count(1)
        FROM adopt
        WHERE
            <include refid="whereCondition">
                <property name="created_at" value="adopt.created_at"/>
            </include>
            AND status = 'COMPLETE'

        UNION ALL

        SELECT COUNT(1)
        FROM adopt
        WHERE
            <include refid="wherePrevCondition">
                <property name="created_at" value="adopt.created_at"/>
            </include>
            AND status = 'COMPLETE'
    </select>

    <!-- 일기 현황 -->
    <select id="countDiarys" resultType="integer">
        SELECT count(1)
        FROM diary
        WHERE
            <include refid="whereCondition">
                <property name="created_at" value="diary.created_at"/>
            </include>

        UNION ALL

        SELECT COUNT(1)
        FROM diary
        WHERE
            <include refid="wherePrevCondition">
                <property name="created_at" value="diary.created_at"/>
            </include>
    </select>

    <select id="countAdoptionStatus" resultType="integer">
        SELECT
            months.month
            , COALESCE(COUNT(adopt.id), 0) AS count
        FROM (
            SELECT 1 AS month UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL
            SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL
            SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL
            SELECT 10 UNION ALL SELECT 11 UNION ALL SELECT 12
        ) months
        LEFT OUTER JOIN adopt
            ON MONTH(adopt.created_at) = months.month
                AND YEAR(adopt.created_at) = #{searchAdoptionYear}
                AND adopt.status = #{searchAdoptionStatus}
        GROUP BY months.month
    </select>

    <select id="selectAdoption" resultType="map">

    </select>
</mapper>